/* A small test program.
*
* Chenghuan , Du Huynh, Jan 2017.
*/

#include <iostream>
#include <opencv2/core/core.hpp>
#include <opencv2/highgui/highgui.hpp>
#include <math.h>
#include <opencv2/opencv.hpp>
#include <time.h>

#include <sstream>
#include <string>

#include <omp.h>

#include "covImage.h"
#include "debug.h"
#include "utils.h"
#include "Cparticle.h"
#include <fstream>

using namespace std;
using namespace cv;


int main( int argc, char** argv )
{
    //This program test the covariance matrices computation of ROI in nine modes
    //color1 is a 100*100*3 image, this is generated by matlab::randn(100,100,3)
    //we can also use any other color image to test.
    // top-left      (9,14)  ((10,15) in Matlab)  
    // bottom-right  (89,94) ((90,95) in Matlab)

    if (argc != 2) {
        cerr << "Usage: Test imageFileName" << endl;
        cerr << "Example:  Test4 color1.jpg" << endl;
        exit(1);
    }
    int nModes = 9;
    vector<vector<int>> v = utils::CovmatQuadrantRef(nModes);
    cout<<"filename = " << argv[1]<<endl;
    string filename = string(argv[1]);
    CovImage cim(filename);
    int nRows = cim.getnRows();
    int nCols = cim.getnCols();
    Mat featimage = cim.getfeatimage();


    //output the Matlab code to verify the results of C
    //fstream is included here to write the .m file
    ofstream ptest4m;
    ptest4m.open ("color1.m");
    ptest4m<< "featimage = zeros(" << nRows << "," << nCols << ","
        << FEAT_DIM3 << ");\n";
    for (int i=0; i < FEAT_DIM3; i++) {
        ptest4m << "featimage(:,:," << i+1 << ") = ";
        ptest4m << debug::extractDoubleMat(featimage,i);
        ptest4m << ";\n";
    }
    ptest4m.close();

    Mat pos = (Mat_<double>(1,4)<<9,14,89,94);
    Cparticle testpar(cim,pos,v);

    ofstream pCresults;
    pCresults.open("Cresults.txt");
    for(int i =0; i< 9; i++){
        pCresults<< "Covariance matrix for mode  "<<i+1<<" is: "<<endl;  
        pCresults<<testpar.m_cmat[i]<<endl; 
    }
    pCresults.close();

    //output the Matlab code to verify the results of C
    //fstream is included here to write the .m file
    ofstream pcovmat_m;
    pcovmat_m.open ("covmatcc.m");
    pcovmat_m<< "covmat_c = zeros(" << FEAT_DIM3 << "," << FEAT_DIM3 << ","
        << 9 << ");\n";
    for (int i=0; i < 9; i++) {
        pcovmat_m << "covmat_c(:,:," << i+1 << ") = ";
        pcovmat_m << testpar.m_cmat[i];
        pcovmat_m << ";\n";
    }
    pcovmat_m.close();
    
    system("pause");
}
